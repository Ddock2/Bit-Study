* EL (Expression Language)
	
	- HTML에 Java가 섞여 쓰는것을 방지
	- 표현식(<%=...%>) 대신 사용
	- 자바의 클래스 메소드 호출 및 집합 객체에 대한 접근 방법을 제공
	- JSP에서 제공하는 내장객체 중 4가지 기본 영역에 대한 속성 사용
	- 구문	: ${ expr }
	- 사용 예	: 당신의 이름은 ${ name } 입니다.
		<%=request.getParameter("name")%> 	=>	${ param.name }
		<%String[] hobbys = request.getParameterValues("hobby");%>
		<%=request.getParameter("hobbys[0]")%>			=> ${ paramValues.hobby[0] }

	* EL에서 객체 찾기
		1. EL에서 기본적으로 제공하는 객체에서 동일한 객체이름을 찾는다
		2. EL에서 기본적으로 제공하는 객체에서 찾지 못했다면, 4가지 공유영역에서 객체를 찾는다
			JSP	pageContext  - request          - session         - application
			EL	pageScope    - requestScope  - sessionScope - applicationScope
		
			왼쪽부터 순차적으로 찾고 먼저 나오면 먼저 나온 객체를 가져옴 
		3. 지정영역에서만 찾는법
			${ 공유영역.name }
			${ requestScope.name } 하면 requestScope 영역에서만 찾음

		4. 공유영역에 객체 등록, 조회, 삭제하기
		<%
			// pageContext, request, session, application
			//공유영역.setAttrivute(name, value)
			pageContext.setAttribute("id", "hong1234");	// setAttribute(이름, 값) 등록, getAttribute(이) 조회, removeAttribute(이름) 삭제
			pageContext.setAttribute("name", "홍길동");
			request.setAttribute("name", "임꺽정");
			session.setAttribute("userInfo", "sbc:1234");
		%>
		<body>
			id : ${ id }<br>			<%-- hong1234 출력 -->
			name : ${ name }<br>		<%-- 홍길동 출력 -->
			name : ${ requestScope.name }<br>	<%-- 임꺽정 출력 -->
			userInfo : ${ userInfo }<br>		<%-- sbc:1234 출력 -->
			userInfo : ${ sessionScope.userInfo }<br>	<%-- sbc:1234 출력 -->
