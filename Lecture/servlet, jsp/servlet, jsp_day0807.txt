< Servlet >
	
	* 서블릿 API
		    : 웹에서 동작하는 서블릿 클래스가 되기 위해서는 다음 3가지 클래스 중 하나를 상속받아서 작성
		Servlet		인터페이스
		GenericServlet	추상클래스
		HttpServlet	추상클래스

	* 서블릿 생명주기
		     : 서블릿 클래스는 지본적인 메소드 호출순서(LifeCycle)가 존재
		init	: 최초 한번만 실행
		service	: 사용자 요청에 대한 실제 응답 처리 진행
		destroy	: 메모리에서 해제될 경우 호출 (ex> 서블릿 내용이 변경, 서버 재구동..)

			init -> service -> destroy -> service -> destroy ....

	톰캣에서 서버를 구현했을때 해당 서버가 자바를 이용할 수 있는 엔진을 가지고 자바를 접목하기 위해서 WEB-INF 폴더 있음
	
	WEB-INF	: classes	- 서블릿관련 파일들이 있음(.class, 바이너리파일)
		  lib  	- 외부 jar 드라이버
		  web.xml	- 환경설정파일
	
	WEB-INF 보안폴더이기 때문에 외부에서 접근하기 위해서 가상url필요
		servlet 2.5 버전까지 web.xml로 매핑
		servlet 3.0 버전부터 어노테이션을 이용하여 가상경로와 실제 파일을 매핑

	Apache Software Foundation/Tomcat 8.0/lib/servlet-api.jar를 WEB-INF/lib에 복사해서 API import 가능
	
---------------------------------------------------------------------------------------------------------------------------------------------------------

	get방식	: url로 정보전달 혹은 form태그 method="get"으로 정보전달		// 왠만하면 get방식
	post방식	: from태그로 속성에 method="post"로 정보전달

---------------------------------------------------------------------------------------------------------------------------------------------------------

< JSP >
	
	* 구성요소
		- HTML
		- 지시문				: 페이지 내 설정 정의	 <%@	%>
		- 스크립트				: 자바코드를 실행할 때 사용되는 코드 블록 <%	%>
						  <%=변수%> 변수를 html에 직접 넣음

		- 주석문				: <%--	--%>
		- 기본 객체 (Implict Object)
	★	- 표현 언어 (Expression Language)
	★	- 표준 태그 라이브러리 (JSTL)
		- 표준 액션 태그 (Action Tag)
		- 커스텀 태그 (Custom Tag)
