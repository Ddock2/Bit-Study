< Annotation >
	
	* DI 자동 주입
		XML 파일이 너무 커지는 것을 방지
		자동 주입 기능 사용시 스프링이 알아서 의존 객체를 찾아서 주입

		자동 주입 기능 사용 방법
			- XML파일에 <context:annotation-config /> 설정을 추가
			- Java파일에 의존주입대상에 @Autowired 또는 @Resource 설정
						(Spring에서 제공)  (java 자체에서 제공)
	
	* XML 설정
		<beans
			.............
			xmlns:context="http://www.springframework.org/schema/context"
			xsi:schemaLocation=".............
					  http://www.springframework.org/schema/context
					  http://www.springframework.org/schema/context/spring-context-4.3.xsd">					  
			<context:annotation-config />
			.............
		</beans>

	* @Autowired			// di_anno01
	       java 설정
		- 변수 설정
		- 생성자 설정
		- set 메서드 설정

	* @Resource			// di_anno02
	       java 설정
		- 변수 설정
		- 생성자 설정 불가
		- set 메서드 설정
	
	객체 찾는 순서
		@Autowired
			1. type matching
			2. 두개 이상이면 @Qualifier가 명시된 빈객체 찾음
			3. 두개 이상이고 @Qualifier가 없을 경우 name matching
			4. 위 경우 다 없을 시 error
		@Resource
			1. name matching
			2. type matching

	* component-scan
		xml파일 설정을 통해서 자동으로 빈으로 사용 될 객체를 등록한다.

		- <context:component-scan base-package="kr.co.mlec" />
		- 지정된 패키지 하위의 모든 패키지를 스캔하여 빈으로 등록
		- 빈으로 등록되려면 자바 클래스에서 어노테이션을 사용해야 한다.
		- @Component, @Controller, @Service, @Repository

			- 동작은 같지만 보통 클래스 구분
				@Component	: 값들을 저장하는 클래스(VO)
				@Service		: 작업을 하는 클래스(비지니스 로직)
				@Repository	: DAO

		- bean태그 id속성이 클래스의 첫글자를 소문자로 하여 지정됨
		- @Component("id")로 아이디 지정가능
	
----------------------------------------------------------------------------------------------------------
		@Resource(name="id") 	해서 주입할 객체의 id를 찾아 씀
----------------------------------------------------------------------------------------------------------
		@Autowired		
		@Qualifier("id")		해서 주입할 객체의 id를 찾아 씀
					@Qualifier는 입려하려는 변수마다 설정

		@Autowired
생성자Car	public Car(@Qualifier("id") Tire tire)
----------------------------------------------------------------------------------------------------------
			di_collection	: xml에서 list, map사용
 ----------------------------------------------------------------------------------------------------------
< Spring AOP >
	
	
















